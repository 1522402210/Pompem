import asyncio
from .scrapers import PacketStorm
from .scrapers import CXSecurity
from .scrapers import ZeroDay
from .messages import show_results
from .file_writers import 


class ExploitFinder:
    def __init__(self):
        self.loop = asyncio.get_event_loop()
        self.scrapers = [PacketStorm(), CXSecurity(), ZeroDay()]

    def __call__(self, *args, **kwargs):
        self.args = args[0]
        self.keywords = self.args.keywords.split(",")
        self.loop.run_until_complete(self.run())

    async def run(self):
        [await task for task in self.create_tasks()]
        for scraper in self.scrapers:
            for keyword, exploits in scraper.items():
                show_results(keyword, exploits)

    def create_tasks(self):
        tasks = []
        for keyword in self.keywords:
            [tasks.append(self.loop.create_task(scraper(keyword=keyword))) for scraper in self.scrapers]
        return tasks
